<ul id="sortme">
  
  <li class="filter">
    <p>{{ 'collections.sorting.title' | t }}</p> 
    <select id="sort-by" class="styled-select">
      <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
      <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
      <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
      <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
      <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
      <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
      <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
      <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
    </select>
  </li>
  <script>
    Shopify.queryParams = {};
    if (location.search.length) {
      for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
        aKeyValue = aCouples[i].split('=');
        if (aKeyValue.length > 1) {
          Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
        }
      }
    }
    jQuery('#sort-by')
    .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
    .bind('change', function() {
      Shopify.queryParams.sort_by = jQuery(this).val();
      location.search = jQuery.param(Shopify.queryParams);
    });

  </script>  
  

{% if settings.sort-dropdown-a-check %}                        
  <li class="filter">
{% assign tags = settings.sort_a  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}    
<p>{{ 'collections.filter.shop_by_color' | t }}</p>
    <select class="styled-select coll-filter">
      <option value="">All</option>
      {% for tag in tags %}
      {% if current_tags contains tag %}
      <option value="{{ tag | handle }}" selected>{{ tag }}</option>
      {% elsif collection.all_tags contains tag %}
      <option value="{{ tag | handle }}">{{ tag }}</option>
      {% endif %}
      {% endfor %}
    </select>
  </li>
{% endif %}

{% if settings.sort-dropdown-b-check %}
  <li class="filter">
{% assign tags = settings.sort_b  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}    
<p>{{ 'collections.filter.shop_by_size' | t }}</p>
    <select class="styled-select coll-filter">
      <option value="">All</option>
      {% for tag in tags %}
      {% if current_tags contains tag %}
      <option value="{{ tag | handle }}" selected>{{ tag }}</option>
      {% elsif collection.all_tags contains tag %}
      <option value="{{ tag | handle }}">{{ tag }}</option>
      {% endif %}
      {% endfor %}
    </select>
  </li>
{% endif %}

{% if settings.sort-dropdown-c-check %}
  <li class="filter">
{% assign tags = settings.sort_c  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}    
<p>{{ 'collections.filter.shop_by_material' | t }}</p>
    <select class="styled-select coll-filter">
      <option value="">All</option>
      {% for tag in tags %}
      {% if current_tags contains tag %}
      <option value="{{ tag | handle }}" selected>{{ tag }}</option>
      {% elsif collection.all_tags contains tag %}
      <option value="{{ tag | handle }}">{{ tag }}</option>
      {% endif %}
      {% endfor %}
    </select>
  </li>
{% endif %}

</ul>  
                   
     
<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection pages */
  /* Give you product tag filter select element a class of coll-filter */
  /* Give your collection select a class of coll-picker */
  /* Brought to you by Caroline Schnapp */
  var allFilters = jQuery('.coll-filter, .coll-picker');
  allFilters.change(function() {
    var newTags = [];
    jQuery('.coll-filter').each(function() { 
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    if (newTags.length) {
      var query = newTags.join('+');
      if (jQuery('.coll-picker').length) {
        window.location.href = '/collections/' + jQuery('.coll-picker').val() + '/' + query;
      }
      else {
        window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('tag', query);
      }
    } 
    else {
      if (jQuery('.coll-picker').length) {
        window.location.href = '/collections/' + jQuery('.coll-picker').val();
      }
      else {
        {% if collection.handle %}
        window.location.href = '/collections/{{ collection.handle }}';
        {% elsif collection.products.first.type == collection.title %}
        window.location.href = '{{ collection.title | url_for_type }}';
        {% elsif collection.products.first.vendor == collection.title %}
        window.location.href = '{{ collection.title | url_for_vendor }}';
        {% endif %}
      }
    }
  });
</script>